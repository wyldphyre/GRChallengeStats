<Window x:Class="GRChallengeStatsWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mlc="clr-namespace:MvvmLibrary.Converters;assembly=MvvmLibrary"
        xmlns:local="clr-namespace:GRChallengeStatsWPF"
        mc:Ignorable="d"
        Title="GR Challenge Stats" Height="510" Width="320"
        d:DataContext="{d:DesignInstance local:DesignTimeChallengeViewModel, IsDesignTimeCreatable=True}"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        FontSize="14"
        WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <local:ChallengeViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <mlc:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <mlc:BooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" Inverted="True"/>

        <Style x:Key="Flat" TargetType="Button">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="BorderBrush" Value="Blue" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <StackPanel Orientation="Vertical">
            <Label Content="{Binding Year}"  HorizontalAlignment="Center" FontSize="40" FontWeight="SemiBold"/>

            <StackPanel Orientation="Horizontal"  HorizontalAlignment="Center">
                <Label HorizontalAlignment="Right" FontWeight="Light" Content="Target" />
                <Label x:Name="TargetLabel" FontWeight="Light" Content="{Binding Target, Mode=TwoWay}"/>
            </StackPanel>

            <Label FontWeight="SemiBold" HorizontalAlignment="Center" Content="Books Completed" />

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Style="{StaticResource Flat}" FontSize="17" Content="-1" Command="{Binding DecrementBooksCompletedCommand}" Margin="20,0" />
                <Label x:Name="CompletedLabel" FontSize="22" FontWeight="SemiBold"  VerticalAlignment="Center" MinWidth="30" Content="{Binding BooksCompleted, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <Button Style="{StaticResource Flat}" FontSize="17" Content="+1" Command="{Binding IncrementBooksCompletedCommand}" Margin="20,0"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Label FontWeight="Light" HorizontalAlignment="Right" Content="Progress" />
                <Label Grid.Column="1" Content="{Binding ChallengeProgress}" ContentStringFormat="P2"/>
            </StackPanel>

            <ProgressBar x:Name="ProgressBar1" Maximum="1" Value="{Binding ChallengeProgress, Mode=OneWay}" Height="10">
                <!--<ProgressBar.Triggers>
                    <EventTrigger RoutedEvent="ProgressBar.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ProgressBar1" 
                                    Storyboard.TargetProperty="Value"
                                    From="0" To="100" Duration="0:0:5"  />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ProgressBar.Triggers>-->
            </ProgressBar>

            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="1" Grid.ColumnSpan="2" BorderBrush="DimGray" Margin="5" BorderThickness="0,1,0,0" />

                <Label Grid.Row="2" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Required Books per Month" />
                <Label Grid.Row="2" Grid.Column="1" Content="{Binding RequiredBooksPerMonth}" ContentStringFormat="N2"/>

                <Label Grid.Row="3" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Required Book % per Day" />
                <Label Grid.Row="3" Grid.Column="1" Content="{Binding RequiredBookPercentPerDay}" ContentStringFormat="P2"/>

                <Label Grid.Row="4" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Books Remaining" />
                <Label Grid.Row="4" Grid.Column="1" Content="{Binding BooksRemaining}"/>

                <Label Grid.Row="5" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Months Remaining" />
                <Label Grid.Row="5" Grid.Column="1" Content="{Binding MonthsRemaining}" ContentStringFormat="N2"/>

                <Border Grid.Row="6" Grid.ColumnSpan="2" BorderBrush="DimGray" Margin="5" BorderThickness="0,1,0,0" />

                <Label Grid.Row="7" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Current Books per Month" />
                <Label Grid.Row="7" Grid.Column="1" Content="{Binding CurrentBooksPerMonth}" ContentStringFormat="N2"/>

                <Label Grid.Row="8" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Ahead of Books per Month by" Visibility="{Binding HasPositiveBooksPerMonthDifference, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Label Grid.Row="8" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Behind Books per Month by" Visibility="{Binding HasPositiveBooksPerMonthDifference, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                <Label Grid.Row="8" Grid.Column="1" Content="{Binding BooksPerMonthDifference}" ContentStringFormat="N2"/>

                <Label Grid.Row="9" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Days per Book" />
                <Label Grid.Row="9" Grid.Column="1" Content="{Binding DaysPerBook}" ContentStringFormat="N2"/>

                <Label Grid.Row="10" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Remaining Days per Book" />
                <Label Grid.Row="10" Grid.Column="1" Content="{Binding RemainingDaysPerbook}" ContentStringFormat="N2"/>

                <Label Grid.Row="11" Grid.Column="0" FontWeight="SemiBold" HorizontalAlignment="Right" Content="Forecast Book Total" />
                <Label Grid.Row="11" Grid.Column="1" Content="{Binding ForecastTotal}" ContentStringFormat="N2"/>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
